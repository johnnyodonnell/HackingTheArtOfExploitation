Q:

At which level is the call stack implemented?

Is the call stack implemented by the processor, the operating system,
or the programming language?

A:

It seems that the call stack model was first implemented by programming
languages with no support from hardware. Then, hardware followed suit and
supported the call stack model in order to support the growing number of
programming langauges that used that model.

It sounds like you could even use a different model than the call stack model
even on hardware that has explicit support for the call stack model.

The ".bss" wikipedia article mentions that Unix and Windows are able to
initialize bss sections of code. And the "Data segement" wikipedia article
mentions that the Intel 8086 provided "code", "data", "stack", and "extra"
memory segements. Thus, it sounds like the call stack architecture is
supported by both processor and programming language.

After reading further on pages 72-73, it's pretty clear that the Intel 86
processor is heavily oriented around the call stack model.

Sources:
- https://softwareengineering.stackexchange.com/a/322730/294287
- https://cs.stackexchange.com/q/82792/147258
- https://softwareengineering.stackexchange.com/q/200784/294287
- https://en.wikipedia.org/wiki/Object_file#Segmentation
- https://en.wikipedia.org/wiki/.bss
- https://en.wikipedia.org/wiki/Data_segment

-------------------------------------------------------------------------------

